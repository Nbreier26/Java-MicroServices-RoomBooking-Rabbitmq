services:
  user:
    restart: always
    container_name: user
    build:
      context: ./user
      dockerfile: Dockerfile
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://dbuser:5432/userdb
      - SPRING_DATASOURCE_USERNAME=admin
      - SPRING_DATASOURCE_PASSWORD=admin
      - SPRING_DATASOURCE_DRIVER_CLASS_NAME=org.postgresql.Driver
      - SPRING_JPA_DATABASE_PLATFORM=org.hibernate.dialect.PostgreSQLDialect
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
      - SPRING_JPA_SHOW_SQL=true
      - SPRING_JPA_PROPERTIES_HIBERNATE_FORMAT_SQL=true
      - SERVER_PORT=8082
    ports:
      - '8083:8082'
    depends_on:
      - dbuser
    networks:
      - netuser
      - netApiGateway
  dbuser:
    image: postgres:latest
    restart: always
    container_name: dbuser
    environment:
      POSTGRES_DB: userdb
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
    ports:
      - '5433:5432'
    networks:
      - netuser

  booking:
    restart: always
    container_name: booking
    build:
      context: ./booking
      dockerfile: Dockerfile
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://dbbooking:5432/reservadb
      - SPRING_DATASOURCE_USERNAME=admin
      - SPRING_DATASOURCE_PASSWORD=admin
      - SPRING_DATASOURCE_DRIVER_CLASS_NAME=org.postgresql.Driver
      - SPRING_JPA_DATABASE_PLATFORM=org.hibernate.dialect.PostgreSQLDialect
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
      - SPRING_JPA_SHOW_SQL=true
      - SPRING_JPA_PROPERTIES_HIBERNATE_FORMAT_SQL=true
      - SERVER_PORT=8082
    ports:
      - '8084:8082'
    depends_on:
      dbbooking:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    networks:
      - netbooking
      - netApiGateway

  dbbooking:
    image: postgres:latest
    restart: always
    container_name: dbbooking
    environment:
      POSTGRES_DB: reservadb
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
    ports:
      - '5434:5432'
    networks:
      - netbooking
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U admin -d reservadb']
      interval: 10s
      timeout: 5s
      retries: 5

  room:
    restart: always
    container_name: room
    build:
      context: ./room
      dockerfile: Dockerfile
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://dbroom:5432/roomdb
      - SPRING_DATASOURCE_USERNAME=admin
      - SPRING_DATASOURCE_PASSWORD=admin
      - SPRING_DATASOURCE_DRIVER_CLASS_NAME=org.postgresql.Driver
      - SPRING_JPA_DATABASE_PLATFORM=org.hibernate.dialect.PostgreSQLDialect
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
      - SPRING_JPA_SHOW_SQL=true
      - SPRING_JPA_PROPERTIES_HIBERNATE_FORMAT_SQL=true
      - SERVER_PORT=8082
    ports:
      - '8085:8082'
    depends_on:
      - dbroom
    networks:
      - netrooms
      - netApiGateway
  dbroom:
    image: postgres:latest
    restart: always
    container_name: dbroom
    environment:
      POSTGRES_DB: roomdb
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
    ports:
      - '5435:5432'
    networks:
      - netrooms

  adminer:
    container_name: adminerMicro
    restart: always
    image: adminer:latest
    ports:
      - '8089:8080'
    networks:
      - netuser
      - netbooking
      - netrooms

  web:
    image: nginx:latest
    volumes:
      - ./application/src:/usr/share/nginx/html
    ports:
      - '3000:80'
    networks:
      - netApiGateway

  gateway:
    restart: always
    container_name: gateway
    build:
      context: ./gateway
      dockerfile: Dockerfile
    environment:
      - SERVER_PORT=8080
    ports:
      - '8080:8080'
    depends_on:
      - user
      - room
      - booking
    networks:
      - netApiGateway

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - '5672:5672'
      - '15672:15672'
    mem_limit: 512m
    cpus: 0.5
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
      RABBITMQ_DEFAULT_VHOST: /
    networks:
      - netApiGateway
      - netuser
      - netbooking
      - netrooms
    healthcheck:
      test: ['CMD', 'rabbitmqctl', 'status']
      interval: 5s
      timeout: 5s
      retries: 10

networks:
  netuser:
    driver: bridge
  netbooking:
    driver: bridge
  netrooms:
    driver: bridge
  netApiGateway:
    driver: bridge
